{"version":3,"sources":["store/reducers/content.js","store/reducers/index.js","store/index.js","store/actionTypes.js","store/actions/content.js","store/actions/index.js","components/fluidSimulation/config.js","components/fluidSimulation/utils.js","components/fluidSimulation/customHooks/usePrograms/shaders/base.vert.js","components/fluidSimulation/customHooks/usePrograms/shaders/advection.frag.js","components/fluidSimulation/customHooks/usePrograms/shaders/advection.manual.frag.js","components/fluidSimulation/customHooks/usePrograms/shaders/background.frag.js","components/fluidSimulation/customHooks/usePrograms/shaders/clear.frag.js","components/fluidSimulation/customHooks/usePrograms/shaders/color.frag.js","components/fluidSimulation/customHooks/usePrograms/shaders/curl.frag.js","components/fluidSimulation/customHooks/usePrograms/shaders/display.shading.frag.js","components/fluidSimulation/customHooks/usePrograms/shaders/divergence.frag.js","components/fluidSimulation/customHooks/usePrograms/shaders/gradient.subtract.frag.js","components/fluidSimulation/customHooks/usePrograms/shaders/pressure.frag.js","components/fluidSimulation/customHooks/usePrograms/shaders/splat.frag.js","components/fluidSimulation/customHooks/usePrograms/shaders/vorticity.frag.js","components/fluidSimulation/customHooks/usePrograms/index.js","components/fluidSimulation/customHooks/useFramebuffers.js","components/fluidSimulation/customHooks/usePointers.js","components/fluidSimulation/customHooks/useFormats.js","components/fluidSimulation/customHooks/useResolution.js","components/fluidSimulation/Simulation.js","components/fluidSimulation/index.js","components/home/index.js","components/content/index.js","App.js","index.js"],"names":["initialState","home","layer1","content","state","arguments","length","undefined","action","type","Object","objectSpread","payload","data","setLayer1","rootReducer","combineReducers","store","createStore","SET_LAYER_1","ActionTypes","actions","SIM_RESOLUTION","DYE_RESOLUTION","DENSITY_DISSIPATION","VELOCITY_DISSIPATION","PRESSURE_DISSIPATION","PRESSURE_ITERATIONS","CURL","SPLAT_RADIUS","TRANSPARENT","generateColor","c","h","s","v","r","g","b","i","Math","floor","f","p","q","t","HSVtoRGB","random","base_vert","advection_frag","advection_manual_frag","background_frag","clear_frag","color_frag","curl_frag","display_shading_frag","divergence_frag","gradient_subtract_frag","pressure_frag","splat_frag","vorticity_frag","useProgramAndUniforms","gl","frag","program","useProgram","shaders","uniforms","useProgramUniforms","useMemo","useFramebuffers","dyeSize","simSize","formats","R","RG","RGBA","halfFloat","hasLinear","getOptsRFormat","minMag","NEAREST","format","internalFormat","curlFBO","useFBO","apply","concat","toConsumableArray","divergenceFBO","densityDFBO","useDoubleFBO","LINEAR","pressureDFBO","velocityDFBO","Pointer","this","id","x","y","dx","dy","down","moved","color","getSupportedFormat","texture","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","texImage2D","fbo","createFramebuffer","attach","COLOR_ATTACHMENT0","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","supportRenderTextureFormat","R16F","RG16F","RGBA16F","useResolution","size","width","height","aspectRatio","max","round","min","backColor","convertHex","Simulation","_useCanvasSize","useCanvasSize","clientWidth","clientHeight","useWebGLContext","version","useWebGLVersion","texHalfFLoat","webgl2","getExtension","HALF_FLOAT","HALF_FLOAT_OES","RED","useFormats","pointers","canvas","useCanvas","useEffect","lastColorChange","timerLoop","timer","Date","now","stop","onMouseMove","e","pageX","pageY","offsetLeft","offsetTop","onTouchMove","preventDefault","touches","targetTouches","pointer","onMouseDown","onTouchStart","push","identifier","onMouseUp","onTouchEnd","changedTouches","j","addEventListener","window","removeEventListener","usePointers","programs","advection","background","clear","curl","displayShading","divergence","gradient","pressure","splat","vorticity","usePrograms","config","framebuffers","splatStack","renderToBuffer","verts","Float32Array","index","Uint16Array","bindBuffer","ARRAY_BUFFER","createBuffer","bufferData","STATIC_DRAW","ELEMENT_ARRAY_BUFFER","vertexAttribPointer","FLOAT","enableVertexAttribArray","buffer","drawElements","TRIANGLES","UNSIGNED_SHORT","input","amount","splatRGB","updateSplat","multipleSplats","pop","viewport","centerX","centerY","uniform1i","uTarget","read","uniform1f","uniform2f","point","uniform3f","radius","write","swap","dt","disable","BLEND","texelSize","uVelocity","uCurl","uTexture","value","uDivergence","uPressure","shasLinear","dyeTexelSize","velocityId","uSource","dissipation","step","target","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","enable","tWidth","tHeight","uniform4f","render","attrs","alpha","depth","stencil","antialias","preserveDrawingBuffer","style","borderRadius","cursor","userSelect","WebkitTapHighlightColor","FluidSimulation","container","useRef","useMeasure","react_default","a","createElement","className","ref","esm","canvasStyle","contextAttrs","fluidSimulation_Simulation","Home","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleMouseDown","setState","open","handleTouchStart","_this2","layers","style1","spring","stiffness","damping","fluidSimulation","onClick","react_motion","_ref","WebkitTransform","transform","Component","connect","ownProps","dispatch","Content","react_router","exact","path","withRouter","App","components_content","ReactDOM","es","react_router_dom","src_App","document","getElementById"],"mappings":"2SAAIA,EAAe,CACfC,KAAM,CACFC,QAAQ,IA0BDC,MAVf,WAA+C,IAA9BC,EAA8BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBL,EAAcQ,EAAQH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC3C,OAAQC,EAAOC,MACX,IAAK,cACD,OAfZ,SAAmBL,EAAOI,GAStB,OARaE,OAAAC,EAAA,EAAAD,CAAA,GACNN,EADM,CAETH,KAAKS,OAAAC,EAAA,EAAAD,CAAA,GACEN,EAAMH,KADT,CAEAC,OAAQM,EAAOI,QAAQC,SAUhBC,CAAUV,EAAOI,GAE5B,QACI,OAAOJ,IChBJW,EAJKC,YAAgB,CAChCb,YCDSc,EAAQC,YAAYH,iECHpBI,EAAc,cCCpB,SAASL,EAAUD,GACtB,MAAO,CACHJ,KAAMW,EACNR,QAAS,CAAEC,SCFJ,IAAAQ,EAAAX,OAAAC,EAAA,MACRR,kDCJMmB,EAAiB,IACjBC,EAAiB,IACjBC,EAAsB,KACtBC,EAAuB,IACvBC,EAAuB,GACvBC,EAAsB,GACtBC,EAAO,GACPC,EAAe,EAIfC,GAAc,ECXpB,SAASC,IACd,IAAMC,EAUR,SAAkBC,EAAGC,EAAGC,GACpB,IAMIC,EAAGC,EAAGC,EANJC,EAAIC,KAAKC,MAAU,EAAJR,GACfS,EAAQ,EAAJT,EAAQM,EACZI,EAAIR,GAAK,EAAID,GACbU,EAAIT,GAAK,EAAIO,EAAIR,GACjBW,EAAIV,GAAK,GAAK,EAAIO,GAAKR,GAI7B,OAAQK,EAAI,GAaR,KAAK,EACL,KAAK,EACL,KAAK,EACAH,EAAIS,EAAKR,EAAIM,EAAKL,EAAIH,EACvB,MACJ,KAAK,EACAC,EAAID,EAAKE,EAAIM,EAAKL,EAAIM,EAIjC,MAAO,CAAER,IAAGC,IAAGC,KA1CLQ,CAASN,KAAKO,SAAU,EAAK,GAMvC,OAJAf,EAAEI,GAAK,IACPJ,EAAEK,GAAK,IACPL,EAAEM,GAAK,IAEAN,ECPK,IAAAgB,EAAA,6jBCAAC,EAAA,sgBCAAC,EAAA,ugCCAAC,EAAA,kdCAAC,EAAA,kVCAAC,EAAA,4NCAAC,EAAA,6nBCAAC,EAAA,s4BCAAC,EAAA,6yBCAAC,EAAA,s1BCAAC,EAAA,y9BCAAC,EAAA,siBCAAC,EAAA,m1BCId,SAASC,GAAsBC,EAAIC,GACjC,IAAMC,EAAUC,YAAWH,EAAII,EAAcH,GACvCI,EAAWC,YAAmBN,EAAIE,GAMxC,OAJiBK,kBAAQ,WACvB,MAAO,CAAEL,UAASG,aACjB,CAACH,EAASG,ICoCAG,OA3Cf,SAAyBR,EAAIS,EAASC,EAASC,GAAS,IAC9CC,EAAsCD,EAAtCC,EAAGC,EAAmCF,EAAnCE,GAAIC,EAA+BH,EAA/BG,KAAMC,EAAyBJ,EAAzBI,UAAWC,EAAcL,EAAdK,UAE1BC,EAAiB,iBAAO,CAC5BtE,KAAMoE,EACNG,OAAQlB,EAAGmB,QACXC,OAAQR,EAAEQ,OACVC,eAAgBT,EAAES,iBAiBdC,EAAUC,IAAMC,WAAN,GAAOxB,GAAPyB,OAAA7E,OAAA8E,EAAA,EAAA9E,CAAc8D,GAAd,CAAuBO,KACjCU,EAAgBJ,IAAMC,WAAN,GAAOxB,GAAPyB,OAAA7E,OAAA8E,EAAA,EAAA9E,CAAc8D,GAAd,CAAuBO,KACvCW,EAAcC,IAAYL,WAAZ,GAAaxB,GAAbyB,OAAA7E,OAAA8E,EAAA,EAAA9E,CAAoB6D,GAApB,CATM,iBAAO,CAC/B9D,KAAMoE,EACNG,OAAQF,EAAYhB,EAAG8B,OAAS9B,EAAGmB,QACnCC,OAAQN,EAAKM,OACbC,eAAgBP,EAAKO,oBAMjBU,EAAeF,IAAYL,WAAZ,GAAaxB,GAAbyB,OAAA7E,OAAA8E,EAAA,EAAA9E,CAAoB8D,GAApB,CAA6BO,KAC5Ce,EAAeH,IAAYL,WAAZ,GAAaxB,GAAbyB,OAAA7E,OAAA8E,EAAA,EAAA9E,CAAoB8D,GAApB,CAlBG,iBAAO,CAC7B/D,KAAMoE,EACNG,OAAQF,EAAYhB,EAAG8B,OAAS9B,EAAGmB,QACnCC,OAAQP,EAAGO,OACXC,eAAgBR,EAAGQ,oBA0BrB,OAViBd,kBAAQ,WACvB,MAAO,CACLe,UACAK,gBACAC,cACAG,eACAC,iBAED,CAACV,EAASK,EAAeC,EAAaG,EAAcC,KCpClD,SAASC,KACZC,KAAKC,IAAM,EACXD,KAAKE,EAAI,EACTF,KAAKG,EAAI,EACTH,KAAKI,GAAK,EACVJ,KAAKK,GAAK,EACVL,KAAKM,MAAO,EACZN,KAAKO,OAAQ,EACbP,KAAKQ,MAAQ,CAAC,GAAI,EAAG,KCezB,SAASC,GAAmB3C,EAAIqB,EAAgBD,EAAQzE,GACtD,IA1BF,SAAoCqD,EAAIqB,EAAgBD,EAAQzE,GAC9D,IAAMiG,EAAU5C,EAAG6C,gBACnB7C,EAAG8C,YAAY9C,EAAG+C,WAAYH,GAE9B5C,EAAGgD,cAAchD,EAAG+C,WAAY/C,EAAGiD,mBAAoBjD,EAAGmB,SAC1DnB,EAAGgD,cAAchD,EAAG+C,WAAY/C,EAAGkD,mBAAoBlD,EAAGmB,SAC1DnB,EAAGgD,cAAchD,EAAG+C,WAAY/C,EAAGmD,eAAgBnD,EAAGoD,eACtDpD,EAAGgD,cAAchD,EAAG+C,WAAY/C,EAAGqD,eAAgBrD,EAAGoD,eACtDpD,EAAGsD,WAAWtD,EAAG+C,WAAY,EAAG1B,EAAgB,EAAG,EAAG,EAAGD,EAAQzE,EAAM,MAEvE,IAAM4G,EAAMvD,EAAGwD,oBACTC,EAASzD,EAAG0D,kBAOlB,OALA1D,EAAG2D,gBAAgB3D,EAAG4D,YAAaL,GACnCvD,EAAG6D,qBAAqB7D,EAAG4D,YAAaH,EAAQzD,EAAG+C,WAAYH,EAAS,GAEzD5C,EAAG8D,uBAAuB9D,EAAG4D,cAE9B5D,EAAG+D,qBAQZC,CAA2BhE,EAAIqB,EAAgBD,EAAQzE,GAC1D,OAAQ0E,GACN,KAAKrB,EAAGiE,KACN,OAAOtB,GAAmB3C,EAAIA,EAAGkE,MAAOlE,EAAGa,GAAIlE,GACjD,KAAKqD,EAAGkE,MACN,OAAOvB,GAAmB3C,EAAIA,EAAGmE,QAASnE,EAAGc,KAAMnE,GACrD,QACE,OAAO,KAIb,MAAO,CAAE0E,iBAAgBD,UCtCZ,SAASgD,GAAcC,EAAMC,EAAOC,GAsBjD,OArBiBhE,kBAAQ,WACvB,IAAIiE,EAAc,EAEdF,GAASC,IACXC,EAAcF,EAAQC,GAGpBC,EAAc,IAChBA,EAAc,EAAMA,GAGtB,IAAMC,EAAM/F,KAAKgG,MAAML,EAAOG,GACxBG,EAAMjG,KAAKgG,MAAML,GAEvB,OAAIC,EAAQC,EACH,CAACE,EAAKE,GAEN,CAACA,EAAKF,IAEd,CAACJ,EAAMC,EAAOC,ICRnB,IAAMK,GAAYC,YpBJQ,WoBoRXC,OA9Qf,WAAsB,IAAAC,EACmCC,cAA7CV,EADUS,EACVT,MAAOW,EADGF,EACHE,YAAaV,EADVQ,EACUR,OAAQW,EADlBH,EACkBG,aAE9BlF,EAAKmF,cACLxE,EFuBK,SAAoBX,GACjC,IAAMoF,EAAUC,cAuChB,OArCiB9E,kBAAQ,WACvB,IAAI+E,EACAtE,EAEEuE,EAAqB,IAAZH,EAEXG,GACFvF,EAAGwF,aAAa,0BAChBxE,IAAchB,EAAGwF,aAAa,8BAE9BF,EAAetF,EAAGwF,aAAa,0BAC/BxE,IAAchB,EAAGwF,aAAa,kCAGhC,IAEI1E,EAAMD,EAAID,EAFRG,EAAYwE,EAASvF,EAAGyF,WAAaH,EAAaI,eAcxD,OAVIH,GACFzE,EAAO6B,GAAmB3C,EAAIA,EAAGmE,QAASnE,EAAGc,KAAMC,GACnDF,EAAK8B,GAAmB3C,EAAIA,EAAGkE,MAAOlE,EAAGa,GAAIE,GAC7CH,EAAI+B,GAAmB3C,EAAIA,EAAGiE,KAAMjE,EAAG2F,IAAK5E,KAE5CD,EAAO6B,GAAmB3C,EAAIA,EAAGc,KAAMd,EAAGc,KAAMC,GAChDF,EAAK8B,GAAmB3C,EAAIA,EAAGc,KAAMd,EAAGc,KAAMC,GAC9CH,EAAI+B,GAAmB3C,EAAIA,EAAGc,KAAMd,EAAGc,KAAMC,IAGxC,CACLD,OACAD,KACAD,IACAG,YACAC,cAED,CAAChB,EAAIoF,IE7DUQ,CAAW5F,GAErB6F,EHNK,WACX,IAAMC,EAASC,cAETF,EAAWtF,kBAAQ,WACrB,MAAO,CAAC,IAAI0B,KACb,IA4HH,OA1HA+D,oBAAU,WACN,IAAIC,EAAkB,EAEhBC,EAAYC,YAAM,WACxB,GAAIF,EAAkB,IAAMG,KAAKC,MAAO,CACpCJ,EAAkBG,KAAKC,MAEvB,IAAK,IAAI5H,EAAI,EAAGA,EAAIoH,EAASrJ,OAAQiC,IAC3BoH,EAASpH,GACjBiE,MAAQzE,OAKd,OAAO,kBAAMiI,EAAUI,UAG3BN,oBAAU,WACN,SAASO,EAAYC,GAClB9H,KAAKO,SAAW,KAEf4G,EAAS,GAAGrD,MAAO,EACnBqD,EAAS,GAAGnD,MAAQzE,KAGxB,IAAImE,EAAIoE,EAAEC,MACNpE,EAAImE,EAAEE,MAEVtE,GAAK0D,EAAOa,WACZtE,GAAKyD,EAAOc,UAEZf,EAAS,GAAGpD,MAAQoD,EAAS,GAAGrD,KAChCqD,EAAS,GAAGvD,GAA2B,GAArBF,EAAIyD,EAAS,GAAGzD,GAClCyD,EAAS,GAAGtD,GAA2B,GAArBF,EAAIwD,EAAS,GAAGxD,GAClCwD,EAAS,GAAGzD,EAAIA,EAChByD,EAAS,GAAGxD,EAAIA,EAGhB,SAASwE,EAAYL,GACrBA,EAAEM,iBAIF,IAFA,IAAMC,EAAUP,EAAEQ,cAETvI,EAAI,EAAGA,EAAIsI,EAAQvK,OAAQiC,IAAK,CACrC,IAAMwI,EAAUpB,EAASpH,GACzBwI,EAAQxE,MAAQwE,EAAQzE,KAExB,IAAIJ,EAAI2E,EAAQtI,GAAGgI,MACfpE,EAAI0E,EAAQtI,GAAGiI,MAEnBtE,GAAK0D,EAAOa,WACZtE,GAAKyD,EAAOc,UAEZK,EAAQ3E,GAAuB,GAAjBF,EAAI6E,EAAQ7E,GAC1B6E,EAAQ1E,GAAuB,GAAjBF,EAAI4E,EAAQ5E,GAC1B4E,EAAQ7E,EAAIA,EACZ6E,EAAQ5E,EAAIA,GAIhB,SAAS6E,IACTrB,EAAS,GAAGrD,MAAO,EACnBqD,EAAS,GAAGnD,MAAQzE,IAGpB,SAASkJ,EAAaX,GACtBA,EAAEM,iBAIF,IAFA,IAAMC,EAAUP,EAAEQ,cAETvI,EAAI,EAAGA,EAAIsI,EAAQvK,OAAQiC,IAAK,CACjCA,GAAKoH,EAASrJ,QAClBqJ,EAASuB,KAAK,IAAInF,IAGlB,IAAIG,EAAI2E,EAAQtI,GAAGgI,MACfpE,EAAI0E,EAAQtI,GAAGiI,MAEnBtE,GAAK0D,EAAOa,WACZtE,GAAKyD,EAAOc,UAEZf,EAASpH,GAAG0D,GAAK4E,EAAQtI,GAAG4I,WAC5BxB,EAASpH,GAAG+D,MAAO,EACnBqD,EAASpH,GAAG2D,EAAIA,EAChByD,EAASpH,GAAG4D,EAAIA,EAChBwD,EAASpH,GAAGiE,MAAQzE,KAIxB,SAASqJ,IACTzB,EAAS,GAAGrD,MAAO,EAGnB,SAAS+E,EAAWf,GAGpB,IAFA,IAAMO,EAAUP,EAAEgB,eAET/I,EAAI,EAAGA,EAAIsI,EAAQvK,OAAQiC,IAChC,IAAK,IAAIgJ,EAAI,EAAGA,EAAI5B,EAASrJ,OAAQiL,IACjCV,EAAQtI,GAAG4I,YAAcxB,EAAS4B,GAAGtF,KACrC0D,EAAS4B,GAAGjF,MAAO,GAa3B,OAPAsD,EAAO4B,iBAAiB,YAAanB,GACrCT,EAAO4B,iBAAiB,YAAab,GAAa,GAClDf,EAAO4B,iBAAiB,YAAaR,GACrCpB,EAAO4B,iBAAiB,aAAcP,GACtCQ,OAAOD,iBAAiB,UAAWJ,GACnCK,OAAOD,iBAAiB,WAAYH,GAE7B,WACPzB,EAAO8B,oBAAoB,YAAarB,GACxCT,EAAO8B,oBAAoB,YAAaf,GAAa,GACrDf,EAAO8B,oBAAoB,YAAaV,GACxCpB,EAAO8B,oBAAoB,aAAcT,GACzCQ,OAAOC,oBAAoB,UAAWN,GACtCK,OAAOC,oBAAoB,WAAYL,KAExC,CAAC1B,EAAUC,IAEPD,EG3HUgC,GACXC,ELRK,SAAqB9H,EAAIgB,GACtC,IAEM+G,EAAYhI,GAAsBC,EAFlBgB,EAAYZ,EAAoBA,GAGhD4H,EAAajI,GAAsBC,EAAII,GACvC6H,EAAQlI,GAAsBC,EAAII,GAClCsC,EAAQ3C,GAAsBC,EAAII,GAClC8H,EAAOnI,GAAsBC,EAAII,GACjC+H,EAAiBpI,GAAsBC,EAAII,GAC3CgI,EAAarI,GAAsBC,EAAII,GACvCiI,EAAWtI,GAAsBC,EAAII,GACrCkI,EAAWvI,GAAsBC,EAAII,GACrCmI,EAAQxI,GAAsBC,EAAII,GAClCoI,EAAYzI,GAAsBC,EAAII,GA8B5C,OA5BiBG,kBAAQ,WACvB,MAAO,CACLwH,YACAC,aACAC,QACAvF,QACAwF,OACAC,iBACAC,aACAC,WACAC,WACAC,QACAC,cAED,CACDT,EACAC,EACAC,EACAvF,EACAwF,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,IKhCiBC,CAAYzI,EAAIW,EAAQK,WAEnCN,EAAU0D,GAAcsE,EAAuBpE,EAAOC,GACtD9D,EAAU2D,GAAcsE,EAAuBpE,EAAOC,GAEtDoE,EAAenI,GAAgBR,EAAIS,EAASC,EAASC,GA+P3D,OA7PAqF,oBAAU,WAAM,IAER+B,EAWAD,EAXAC,UACAC,EAUAF,EAVAE,WACAC,EASAH,EATAG,MACAvF,EAQAoF,EARApF,MACAwF,EAOAJ,EAPAI,KACAC,EAMAL,EANAK,eACAC,EAKAN,EALAM,WACAC,EAIAP,EAJAO,SACAC,EAGAR,EAHAQ,SACAC,EAEAT,EAFAS,MACAC,EACAV,EADAU,UAIAlH,EAKAqH,EALArH,QACAK,EAIAgH,EAJAhH,cACAC,EAGA+G,EAHA/G,YACAG,EAEA4G,EAFA5G,aACAC,EACA2G,EADA3G,aAGE4G,EAAa,GAEbC,EAAkB,WACpB,IAAMC,EAAQ,IAAIC,aAAa,EAAE,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,IACnDC,EAAQ,IAAIC,YAAY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAS9C,OAPAjJ,EAAGkJ,WAAWlJ,EAAGmJ,aAAcnJ,EAAGoJ,gBAClCpJ,EAAGqJ,WAAWrJ,EAAGmJ,aAAcL,EAAO9I,EAAGsJ,aACzCtJ,EAAGkJ,WAAWlJ,EAAGuJ,qBAAsBvJ,EAAGoJ,gBAC1CpJ,EAAGqJ,WAAWrJ,EAAGuJ,qBAAsBP,EAAOhJ,EAAGsJ,aACjDtJ,EAAGwJ,oBAAoB,EAAG,EAAGxJ,EAAGyJ,OAAO,EAAO,EAAG,GACjDzJ,EAAG0J,wBAAwB,GAEpB,SAAAC,GACH3J,EAAG2D,gBAAgB3D,EAAG4D,YAAa+F,GACnC3J,EAAG4J,aAAa5J,EAAG6J,UAAW,EAAG7J,EAAG8J,eAAgB,IAbpC,GAiBxB,SAASC,IACDnB,EAAWpM,OAAS,GA6K5B,SAAwBwN,GACxB,IAAK,IAAIvL,EAAI,EAAGA,EAAIuL,EAAQvL,IAAK,CAC7B,IAAMwL,EAAWhM,IACjBgM,EAAS3L,GAAK,GACd2L,EAAS1L,GAAK,GACd0L,EAASzL,GAAK,GACd,IAAM4D,EAAIkC,EAAQ5F,KAAKO,SACjBoD,EAAIkC,EAAS7F,KAAKO,SAClBqD,EAAK,KAAQ5D,KAAKO,SAAW,IAC7BsD,EAAK,KAAQ7D,KAAKO,SAAW,IACnCiL,EAAY9H,EAAGC,EAAGC,EAAIC,EAAI0H,IAtLtBE,CAAevB,EAAWwB,OAG9B,IAAK,IAAI3L,EAAI,EAAGA,EAAIoH,EAASrJ,OAAQiC,IAAK,CACtC,IAAMI,EAAIgH,EAASpH,GACfI,EAAE4D,QACNyH,EAAYrL,EAAEuD,EAAGvD,EAAEwD,EAAGxD,EAAEyD,GAAIzD,EAAE0D,GAAI1D,EAAE6D,OACpC7D,EAAE4D,OAAQ,IA+IlB,SAASyH,EAAY9H,EAAGC,EAAGC,EAAIC,EAAI0H,GAC/BjK,EAAGqK,SAAS,EAAG,EAAG3J,EAAQ,GAAIA,EAAQ,IAEtC,IAAM4J,EAAUlI,EAAI6C,EACdsF,EAAU,EAAMlI,EAAI6C,EAE1BlF,EAAGG,WAAWoI,EAAMrI,SACpBF,EAAGwK,UAAUjC,EAAMlI,SAASoK,QAASzI,EAAa0I,KAAKjH,OAAO,IAC9DzD,EAAG2K,UAAUpC,EAAMlI,SAASmE,YAAaF,EAAQC,GACjDvE,EAAG4K,UAAUrC,EAAMlI,SAASwK,MAAOP,EAASC,GAC5CvK,EAAG8K,UAAUvC,EAAMlI,SAASqC,MAAOJ,GAAKC,EAAI,GAC5CvC,EAAG2K,UAAUpC,EAAMlI,SAAS0K,OAAQrC,EAAsB,KAC1DG,EAAe7G,EAAagJ,MAAMzH,KAClCvB,EAAaiJ,OAEbjL,EAAGqK,SAAS,EAAG,EAAG5J,EAAQ,GAAIA,EAAQ,IACtCT,EAAGwK,UAAUjC,EAAMlI,SAASoK,QAAS7I,EAAY8I,KAAKjH,OAAO,IAC7DzD,EAAG8K,UAAUvC,EAAMlI,SAASqC,MAAOuH,EAAS3L,EAAG2L,EAAS1L,EAAG0L,EAASzL,GACpEqK,EAAejH,EAAYoJ,MAAMzH,KACjC3B,EAAYqJ,OAiBhB,IAAM/E,EAAYC,YAAM,WACxB4D,IA/KA,SAAcmB,GACVlL,EAAGmL,QAAQnL,EAAGoL,OACdpL,EAAGqK,SAAS,EAAG,EAAG3J,EAAQ,GAAIA,EAAQ,IAEtCV,EAAGG,WAAW+H,EAAKhI,SACnBF,EAAG4K,UAAU1C,EAAK7H,SAASgL,UAAW,EAAM3K,EAAQ,GAAI,EAAMA,EAAQ,IACtEV,EAAGwK,UAAUtC,EAAK7H,SAASiL,UAAWtJ,EAAa0I,KAAKjH,OAAO,IAC/DoF,EAAevH,EAAQiC,KAEvBvD,EAAGG,WAAWqI,EAAUtI,SACxBF,EAAG4K,UACCpC,EAAUnI,SAASgL,UACnB,EAAM3K,EAAQ,GACd,EAAMA,EAAQ,IAElBV,EAAGwK,UAAUhC,EAAUnI,SAASiL,UAAWtJ,EAAa0I,KAAKjH,OAAO,IACpEzD,EAAGwK,UAAUhC,EAAUnI,SAASkL,MAAOjK,EAAQmC,OAAO,IACtDzD,EAAG2K,UAAUnC,EAAUnI,SAAS6H,KAAMQ,GACtC1I,EAAG2K,UAAUnC,EAAUnI,SAAS6K,GAAIA,GACpCrC,EAAe7G,EAAagJ,MAAMzH,KAClCvB,EAAaiJ,OAEbjL,EAAGG,WAAWiI,EAAWlI,SACzBF,EAAG4K,UACCxC,EAAW/H,SAASgL,UACpB,EAAM3K,EAAQ,GACd,EAAMA,EAAQ,IAElBV,EAAGwK,UAAUpC,EAAW/H,SAASiL,UAAWtJ,EAAa0I,KAAKjH,OAAO,IACrEoF,EAAelH,EAAc4B,KAE7BvD,EAAGG,WAAW8H,EAAM/H,SACpBF,EAAGwK,UAAUvC,EAAM5H,SAASmL,SAAUzJ,EAAa2I,KAAKjH,OAAO,IAC/DzD,EAAG2K,UAAU1C,EAAM5H,SAASoL,MAAO/C,GACnCG,EAAe9G,EAAaiJ,MAAMzH,KAClCxB,EAAakJ,OAEbjL,EAAGG,WAAWmI,EAASpI,SACvBF,EAAG4K,UACCtC,EAASjI,SAASgL,UAClB,EAAM3K,EAAQ,GACd,EAAMA,EAAQ,IAElBV,EAAGwK,UAAUlC,EAASjI,SAASqL,YAAa/J,EAAc8B,OAAO,IAEjE,IAAK,IAAIhF,EAAI,EAAGA,EAAIiK,EAA4BjK,IAC5CuB,EAAGwK,UAAUlC,EAASjI,SAASsL,UAAW5J,EAAa2I,KAAKjH,OAAO,IACnEoF,EAAe9G,EAAaiJ,MAAMzH,KAClCxB,EAAakJ,OAGjBjL,EAAGG,WAAWkI,EAASnI,SACvBF,EAAG4K,UACCvC,EAAShI,SAASgL,UAClB,EAAM3K,EAAQ,GACd,EAAMA,EAAQ,IAElBV,EAAGwK,UAAUnC,EAAShI,SAASsL,UAAW5J,EAAa2I,KAAKjH,OAAO,IACnEzD,EAAGwK,UAAUnC,EAAShI,SAASiL,UAAWtJ,EAAa0I,KAAKjH,OAAO,IACnEoF,EAAe7G,EAAagJ,MAAMzH,KAClCvB,EAAaiJ,OAEbjL,EAAGG,WAAW4H,EAAU7H,SACxBF,EAAG4K,UACC7C,EAAU1H,SAASgL,UACnB,EAAM3K,EAAQ,GACd,EAAMA,EAAQ,IAGbC,EAAQiL,YACT5L,EAAG4K,UACH7C,EAAU1H,SAASwL,aACnB,EAAMnL,EAAQ,GACd,EAAMA,EAAQ,IAIlB,IAAMoL,EAAa9J,EAAa0I,KAAKjH,OAAO,GAC5CzD,EAAGwK,UAAUzC,EAAU1H,SAASiL,UAAWQ,GAC3C9L,EAAGwK,UAAUzC,EAAU1H,SAAS0L,QAASD,GACzC9L,EAAG2K,UAAU5C,EAAU1H,SAAS6K,GAAIA,GACpClL,EAAG2K,UAAU5C,EAAU1H,SAAS2L,YAAatD,GAC7CG,EAAe7G,EAAagJ,MAAMzH,KAClCvB,EAAaiJ,OAEbjL,EAAGqK,SAAS,EAAG,EAAG5J,EAAQ,GAAIA,EAAQ,IAEjCE,EAAQK,WACThB,EAAG4K,UACH7C,EAAU1H,SAASwL,aACnB,EAAMpL,EAAQ,GACd,EAAMA,EAAQ,IAIlBT,EAAGwK,UAAUzC,EAAU1H,SAASiL,UAAWtJ,EAAa0I,KAAKjH,OAAO,IACpEzD,EAAGwK,UAAUzC,EAAU1H,SAAS0L,QAASnK,EAAY8I,KAAKjH,OAAO,IACjEzD,EAAG2K,UAAU5C,EAAU1H,SAAS2L,YAAatD,GAC7CG,EAAejH,EAAYoJ,MAAMzH,KACjC3B,EAAYqJ,OA6EhBgB,CAAK,MA1EL,SAAgBC,GACE,MAAVA,GAAmBxD,EAInB1I,EAAGmL,QAAQnL,EAAGoL,QAHdpL,EAAGmM,UAAUnM,EAAGoM,IAAKpM,EAAGqM,qBACxBrM,EAAGsM,OAAOtM,EAAGoL,QAKjB,IAAMmB,EAAmB,MAAVL,EAAiB5H,EAAQ7D,EAAQ,GAC1C+L,EAAoB,MAAVN,EAAiB3H,EAAS9D,EAAQ,GAElDT,EAAGqK,SAAS,EAAG,EAAG/F,EAAOC,GAEpBmE,IACD1I,EAAGG,WAAWuC,EAAMxC,SACpBF,EAAGyM,UAAHjL,MAAAxB,EAAE,CAAW0C,EAAMrC,SAASqC,OAA1BjB,OAAA7E,OAAA8E,EAAA,EAAA9E,CAAoCgI,MACtCiE,EAAeqD,IAGL,MAAVA,GAAkBxD,IAClB1I,EAAGG,WAAW6H,EAAW9H,SACzBF,EAAG2K,UAAU3C,EAAW3H,SAASmE,YAAa+H,EAASC,GACvD3D,EAAe,OAGnB7I,EAAGG,WAAWgI,EAAejI,SAC7BF,EAAG4K,UACCzC,EAAe9H,SAASgL,UACxB,EAAMkB,EACN,EAAMC,GAEVxM,EAAGwK,UAAUrC,EAAe9H,SAASmL,SAAU5J,EAAY8I,KAAKjH,OAAO,IAEvEoF,EAAeqD,GA0CnBQ,CAAO,QAKP,OAAO,kBAAMxG,EAAUI,SACxB,CACCtG,EACAW,EACAkF,EACAnF,EACAD,EACA6D,EACAW,EACAV,EACAW,EACA4C,EACAa,IAGG,MCtRLgE,GAAQ,CACVC,OAAO,EACPC,OAAO,EACPC,SAAS,EACTC,WAAW,EACXC,uBAAuB,GAGrBC,GAAQ,CACVC,aAAc,EACdC,OAAQ,UACRC,WAAY,OACZC,wBAAyB,eA4BdC,OAzBf,WACI,IAAMC,EAAYC,mBACVlJ,EAAUmJ,YAAWF,GAArBjJ,MAGR,OACEoJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,OAAKE,IAAKP,GACPjJ,EACCoJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACExI,QAAM,EACNjB,MAAOA,EACPC,OATK,IAULyJ,YAAaf,GACbgB,aAActB,IAEde,EAAAC,EAAAC,cAACM,GAAD,OAEA,QC9BRC,eACF,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAzR,OAAA0R,EAAA,EAAA1R,CAAAsF,KAAAiM,IACfE,EAAAzR,OAAA2R,EAAA,EAAA3R,CAAAsF,KAAAtF,OAAA4R,EAAA,EAAA5R,CAAAuR,GAAAM,KAAAvM,KAAMkM,KAIVM,gBAAkB,WACdL,EAAKM,SAAS,CAACC,MAAOP,EAAK/R,MAAMsS,QANlBP,EASnBQ,iBAAmB,SAACrI,GAChBA,EAAEM,iBACFuH,EAAKK,mBATLL,EAAK/R,MAAQ,CAACsS,MAAM,GAFLP,wEAcV,IAAAS,EAAA5M,KACG9F,EAAW8F,KAAKkM,MAAMW,OAAtB3S,OACF4S,EAAS,CACX5M,EAAG6M,iBAAO/M,KAAK5F,MAAMsS,MAAQ,IAAM,IAAK,CAACM,UAAW,IAAKC,QAAS,KAClE9M,EAAG4M,iBAAO/M,KAAK5F,MAAMsS,MAAQ,GAAK,GAAI,CAACM,UAAW,IAAKC,QAAS,MAGpE,OACIzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAACwB,GAAD,MACA1B,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,UAAQyB,QAAS,SAAA7I,GAAC,OAAIsI,EAAKV,MAAMpR,WAAWZ,KAA5C,kBAICA,GACGsR,EAAAC,EAAAC,cAAA,8BAEJF,EAAAC,EAAAC,cAAA,UACA1G,YAAahF,KAAKwM,gBAClBvH,aAAcjF,KAAK2M,kBAFnB,UAOAnB,EAAAC,EAAAC,cAAC0B,EAAA,OAAD,CACArC,MAAO+B,GACF,SAAAO,GAAA,IAAEnN,EAAFmN,EAAEnN,EAAGC,EAALkN,EAAKlN,EAAL,OAGDqL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,OACAC,UAAU,cACVZ,MAAO,CACHuC,gBAAe,eAAA/N,OAAiBW,EAAjB,QAAAX,OAAyBY,EAAzB,UACfoN,UAAS,eAAAhO,OAAiBW,EAAjB,QAAAX,OAAyBY,EAAzB,YAJb,wBA9CLqN,aA4EJC,eAZS,SAACrT,EAAOsT,GAC5B,MAAO,CACHb,OAAQzS,EAAMD,QAAQF,OAIH,SAAA0T,GACvB,MAAO,CACH7S,UAAW,SAACD,GAAD,OAAU8S,EAAStS,EAAQP,UAAUD,OAIzC4S,CAGbxB,ICjFI2B,oLAEE,OACIpC,EAAAC,EAAAC,cAAA,WAASC,UAAU,WACfH,EAAAC,EAAAC,cAAA,OAAKX,MAAO,CAAC3I,MAAO,SAChBoJ,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIvD,OAAQ,kBAAMgB,EAAAC,EAAAC,cAACzR,GAAD,kBALlCuT,aAoBPQ,eAAWJ,ICbXK,OARf,WACI,OACIzC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAACwC,GAAD,QCEZC,IAAS3D,OACLgB,EAAAC,EAAAC,cAAC0C,EAAA,EAAD,CAAUnT,MAAOA,GACbuQ,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,KACI7C,EAAAC,EAAAC,cAAC4C,GAAD,QAIRC,SAASC,eAAe","file":"static/js/main.3965453e.chunk.js","sourcesContent":["let initialState = {\n    home: {\n        layer1: false\n    }\n};\n\nfunction setLayer1(state, action) {\n    let nextState = {\n        ...state,\n        home: {\n            ...state.home,\n            layer1: action.payload.data,\n        }\n    }\n\n    return nextState\n}\n\nfunction content(state = initialState, action) {\n    switch (action.type) {\n        case 'SET_LAYER_1':\n            return setLayer1(state, action);\n        \n        default:\n            return state;\n    }\n}\n\nexport default content;","import { combineReducers } from 'redux';\n\nimport content from './content';\n\nconst rootReducer = combineReducers({\n    content,\n});\n\nexport default rootReducer;\n","import { createStore } from 'redux';\n\nimport rootReducer from './reducers';\n\nexport const store = createStore(rootReducer);\n","//content\nexport const SET_LAYER_1 = 'SET_LAYER_1';","import * as ActionTypes from 'store/actionTypes.js';\n\nexport function setLayer1(data) {\n    return {\n        type: ActionTypes.SET_LAYER_1,\n        payload: { data }\n    };\n}","\nimport * as content from './content';\n\nexport default {\n    ...content,\n};\n","export const SIM_RESOLUTION = 128\nexport const DYE_RESOLUTION = 512\nexport const DENSITY_DISSIPATION = 0.975\nexport const VELOCITY_DISSIPATION = 0.98\nexport const PRESSURE_DISSIPATION = 0.9\nexport const PRESSURE_ITERATIONS = 50\nexport const CURL = 10\nexport const SPLAT_RADIUS = 2\nexport const SHADING = true\nexport const COLORFUL = true\nexport const BACK_COLOR = '#282c34'\nexport const TRANSPARENT = false\n","export function generateColor() {\n  const c = HSVtoRGB(Math.random(), 1.0, 1.0)\n\n  c.r *= 0.15\n  c.g *= 0.15\n  c.b *= 0.15\n\n  return c\n}\n\n// prettier-ignore\nfunction HSVtoRGB(h, s, v) {\n    const i = Math.floor(h * 6)\n    const f = h * 6 - i\n    const p = v * (1 - s)\n    const q = v * (1 - f * s)\n    const t = v * (1 - (1 - f) * s)\n    \n    let r, g, b\n    \n    switch (i % 4) {\n        // case 0:\n        //     (r = v); (g = t); (b = p)\n        //     break\n        // case 1:\n        //     (r = q); (g = v); (b = p)\n        //     break\n        // case 2:\n        //     (r = p); (g = v); (b = t)\n        //     break\n        // case 3:\n        //     (r = p); (g = q); (b = v)\n        //     break\n        case 0:\n        case 1:\n        case 2:\n            (r = t); (g = p); (b = v)\n            break\n        case 3:\n            (r = v); (g = p); (b = q)\n            break\n  }\n\n  return { r, g, b }\n}\n","export default `\n  precision highp float;\n\n  // This shader is from the awesome demo at:\n  // https://github.com/PavelDoGreat/WebGL-Fluid-Simulation\n\n  attribute vec2 aPosition;\n\n  uniform vec2 texelSize;\n\n  varying vec2 vUv;\n  varying vec2 vL;\n  varying vec2 vR;\n  varying vec2 vT;\n  varying vec2 vB;\n  \n  void main () {\n    vUv = aPosition * 0.5 + 0.5;\n    vL = vUv - vec2(texelSize.x, 0.0);\n    vR = vUv + vec2(texelSize.x, 0.0);\n    vT = vUv + vec2(0.0, texelSize.y);\n    vB = vUv - vec2(0.0, texelSize.y);\n\n    gl_Position = vec4(aPosition, 0.0, 1.0);\n  }\n`\n","export default `\n  precision highp float;\n  precision highp sampler2D;\n\n  // This shader is from the awesome demo at:\n  // https://github.com/PavelDoGreat/WebGL-Fluid-Simulation\n\n  varying vec2 vUv;\n  uniform sampler2D uVelocity;\n  uniform sampler2D uSource;\n  uniform vec2 texelSize;\n  uniform float dt;\n  uniform float dissipation;\n\n  void main () {\n    vec2 coord = vUv - dt * texture2D(uVelocity, vUv).xy * texelSize;\n    gl_FragColor = dissipation * texture2D(uSource, coord);\n    gl_FragColor.a = 1.0;\n  }\n`\n","export default `\n  precision highp float;\n  precision highp sampler2D;\n\n  // This shader is from the awesome demo at:\n  // https://github.com/PavelDoGreat/WebGL-Fluid-Simulation\n\n  varying vec2 vUv;\n  uniform sampler2D uVelocity;\n  uniform sampler2D uSource;\n  uniform vec2 texelSize;\n  uniform vec2 dyeTexelSize;\n  uniform float dt;\n  uniform float dissipation;\n\n  vec4 bilerp (sampler2D sam, vec2 uv, vec2 tsize) {\n    vec2 st = uv / tsize - 0.5;\n\n    vec2 iuv = floor(st);\n    vec2 fuv = fract(st);\n\n    vec4 a = texture2D(sam, (iuv + vec2(0.5, 0.5)) * tsize);\n    vec4 b = texture2D(sam, (iuv + vec2(1.5, 0.5)) * tsize);\n    vec4 c = texture2D(sam, (iuv + vec2(0.5, 1.5)) * tsize);\n    vec4 d = texture2D(sam, (iuv + vec2(1.5, 1.5)) * tsize);\n\n    return mix(mix(a, b, fuv.x), mix(c, d, fuv.x), fuv.y);\n  }\n\n  void main () {\n    vec2 coord = vUv - dt * bilerp(uVelocity, vUv, texelSize).xy * texelSize;\n\n    gl_FragColor = dissipation * bilerp(uSource, coord, dyeTexelSize);\n    gl_FragColor.a = 1.0;\n  }\n`\n","export default `\n  precision highp float;\n  precision highp sampler2D;\n\n  // This shader is from the awesome demo at:\n  // https://github.com/PavelDoGreat/WebGL-Fluid-Simulation\n\n  varying vec2 vUv;\n  uniform sampler2D uTexture;\n  uniform float aspectRatio;\n\n  #define SCALE 25.0\n\n  void main () {\n    vec2 uv = floor(vUv * SCALE * vec2(aspectRatio, 1.0));\n    float v = mod(uv.x + uv.y, 2.0);\n    v = v * 0.1 + 0.8;\n    gl_FragColor = vec4(vec3(v), 1.0);\n  }\n`\n","export default `\n  precision mediump float;\n  precision mediump sampler2D;\n\n  // This shader is from the awesome demo at:\n  // https://github.com/PavelDoGreat/WebGL-Fluid-Simulation\n\n  varying highp vec2 vUv;\n  uniform sampler2D uTexture;\n  uniform float value;\n\n  void main () {\n    gl_FragColor = value * texture2D(uTexture, vUv);\n  }\n`\n","export default `\n  precision mediump float;\n\n  // This shader is from the awesome demo at:\n  // https://github.com/PavelDoGreat/WebGL-Fluid-Simulation\n\n  uniform vec4 color;\n\n  void main () {\n    gl_FragColor = color;\n  }\n`\n","export default `\n  precision mediump float;\n  precision mediump sampler2D;\n\n  // This shader is from the awesome demo at:\n  // https://github.com/PavelDoGreat/WebGL-Fluid-Simulation\n\n  uniform sampler2D uVelocity;\n\n  varying highp vec2 vUv;\n  varying highp vec2 vL;\n  varying highp vec2 vR;\n  varying highp vec2 vT;\n  varying highp vec2 vB;\n\n  void main () {\n    float L = texture2D(uVelocity, vL).y;\n    float R = texture2D(uVelocity, vR).y;\n    float T = texture2D(uVelocity, vT).x;\n    float B = texture2D(uVelocity, vB).x;\n    float vorticity = R - L - T + B;\n\n    gl_FragColor = vec4(0.5 * vorticity, 0.0, 0.0, 1.0);\n  }\n`\n","export default `\n  precision highp float;\n  precision highp sampler2D;\n\n  // This shader is from the awesome demo at:\n  // https://github.com/PavelDoGreat/WebGL-Fluid-Simulation\n\n  varying vec2 vUv;\n  varying vec2 vL;\n  varying vec2 vR;\n  varying vec2 vT;\n  varying vec2 vB;\n  uniform sampler2D uTexture;\n  uniform vec2 texelSize;\n\n  void main () {\n    vec3 L = texture2D(uTexture, vL).rgb;\n    vec3 R = texture2D(uTexture, vR).rgb;\n    vec3 T = texture2D(uTexture, vT).rgb;\n    vec3 B = texture2D(uTexture, vB).rgb;\n    vec3 C = texture2D(uTexture, vUv).rgb;\n\n    float dx = length(R) - length(L);\n    float dy = length(T) - length(B);\n\n    vec3 n = normalize(vec3(dx, dy, length(texelSize)));\n    vec3 l = vec3(0.0, 0.0, 1.0);\n\n    float diffuse = clamp(dot(n, l) + 0.7, 0.7, 1.0);\n    C.rgb *= diffuse;\n\n    float a = max(C.r, max(C.g, C.b));\n    gl_FragColor = vec4(C, a);\n  }\n`\n","export default `\n  precision mediump float;\n  precision mediump sampler2D;\n\n  // This shader is from the awesome demo at:\n  // https://github.com/PavelDoGreat/WebGL-Fluid-Simulation\n\n  varying highp vec2 vUv;\n  varying highp vec2 vL;\n  varying highp vec2 vR;\n  varying highp vec2 vT;\n  varying highp vec2 vB;\n  uniform sampler2D uVelocity;\n\n  void main () {\n    float L = texture2D(uVelocity, vL).x;\n    float R = texture2D(uVelocity, vR).x;\n    float T = texture2D(uVelocity, vT).y;\n    float B = texture2D(uVelocity, vB).y;\n\n    vec2 C = texture2D(uVelocity, vUv).xy;\n    if (vL.x < 0.0) { L = -C.x; }\n    if (vR.x > 1.0) { R = -C.x; }\n    if (vT.y > 1.0) { T = -C.y; }\n    if (vB.y < 0.0) { B = -C.y; }\n\n    float div = 0.5 * (R - L + T - B);\n\n    gl_FragColor = vec4(div, 0.0, 0.0, 1.0);\n  }\n`\n","export default `\n  precision mediump float;\n  precision mediump sampler2D;\n\n  // This shader is from the awesome demo at:\n  // https://github.com/PavelDoGreat/WebGL-Fluid-Simulation\n\n  varying highp vec2 vUv;\n  varying highp vec2 vL;\n  varying highp vec2 vR;\n  varying highp vec2 vT;\n  varying highp vec2 vB;\n  uniform sampler2D uPressure;\n  uniform sampler2D uVelocity;\n\n  vec2 boundary (vec2 uv) {\n    return uv;\n    // uv = min(max(uv, 0.0), 1.0);\n    // return uv;\n  }\n\n  void main () {\n    float L = texture2D(uPressure, boundary(vL)).x;\n    float R = texture2D(uPressure, boundary(vR)).x;\n    float T = texture2D(uPressure, boundary(vT)).x;\n    float B = texture2D(uPressure, boundary(vB)).x;\n    vec2 velocity = texture2D(uVelocity, vUv).xy;\n    velocity.xy -= vec2(R - L, T - B);\n    gl_FragColor = vec4(velocity, 0.0, 1.0);\n  }\n`\n","export default `\n  precision mediump float;\n  precision mediump sampler2D;\n\n  // This shader is from the awesome demo at:\n  // https://github.com/PavelDoGreat/WebGL-Fluid-Simulation\n\n  varying highp vec2 vUv;\n  varying highp vec2 vL;\n  varying highp vec2 vR;\n  varying highp vec2 vT;\n  varying highp vec2 vB;\n  uniform sampler2D uPressure;\n  uniform sampler2D uDivergence;\n\n  vec2 boundary (vec2 uv) {\n    return uv;\n    // uncomment if you use wrap or repeat texture mode\n    // uv = min(max(uv, 0.0), 1.0);\n    // return uv;\n  }\n\n  void main () {\n    float L = texture2D(uPressure, boundary(vL)).x;\n    float R = texture2D(uPressure, boundary(vR)).x;\n    float T = texture2D(uPressure, boundary(vT)).x;\n    float B = texture2D(uPressure, boundary(vB)).x;\n    float C = texture2D(uPressure, vUv).x;\n    float divergence = texture2D(uDivergence, vUv).x;\n    float pressure = (L + R + B + T - divergence) * 0.25;\n    gl_FragColor = vec4(pressure, 0.0, 0.0, 1.0);\n  }\n`\n","export default `\n  precision highp float;\n  precision highp sampler2D;\n\n  // This shader is from the awesome demo at:\n  // https://github.com/PavelDoGreat/WebGL-Fluid-Simulation\n\n  varying vec2 vUv;\n\n  uniform sampler2D uTarget;\n  uniform float aspectRatio;\n  uniform vec3 color;\n  uniform vec2 point;\n  uniform float radius;\n\n  void main () {\n    vec2 p = vUv - point.xy;\n    p.x *= aspectRatio;\n    vec3 splat = exp(-dot(p, p) / radius) * color;\n    vec3 base = texture2D(uTarget, vUv).xyz;\n    gl_FragColor = vec4(base + splat, 1.0);\n  }\n`\n","export default `\n  precision highp float;\n  precision highp sampler2D;\n\n  // This shader is from the awesome demo at:\n  // https://github.com/PavelDoGreat/WebGL-Fluid-Simulation\n\n  varying vec2 vUv;\n  varying vec2 vL;\n  varying vec2 vR;\n  varying vec2 vT;\n  varying vec2 vB;\n  uniform sampler2D uVelocity;\n  uniform sampler2D uCurl;\n  uniform float curl;\n  uniform float dt;\n\n  void main () {\n    float L = texture2D(uCurl, vL).x;\n    float R = texture2D(uCurl, vR).x;\n    float T = texture2D(uCurl, vT).x;\n    float B = texture2D(uCurl, vB).x;\n    float C = texture2D(uCurl, vUv).x;\n\n    vec2 force = 0.5 * vec2(abs(T) - abs(B), abs(R) - abs(L));\n    force /= length(force) + 0.0001;\n    force *= curl * C;\n    force.y *= -1.0;\n\n    vec2 vel = texture2D(uVelocity, vUv).xy;\n    gl_FragColor = vec4(vel + force * dt, 0.0, 1.0);\n  }\n`\n","import { useMemo } from 'react'\nimport { useProgram, useProgramUniforms } from '@react-vertex/core'\nimport * as shaders from './shaders'\n\nfunction useProgramAndUniforms(gl, frag) {\n  const program = useProgram(gl, shaders.vert, frag)\n  const uniforms = useProgramUniforms(gl, program)\n\n  const memoized = useMemo(() => {\n    return { program, uniforms }\n  }, [program, uniforms])\n\n  return memoized\n}\n\nexport default function usePrograms(gl, hasLinear) {\n  const advectionFrag = hasLinear ? shaders.advection : shaders.advectionManual\n\n  const advection = useProgramAndUniforms(gl, advectionFrag)\n  const background = useProgramAndUniforms(gl, shaders.background)\n  const clear = useProgramAndUniforms(gl, shaders.clear)\n  const color = useProgramAndUniforms(gl, shaders.color)\n  const curl = useProgramAndUniforms(gl, shaders.curl)\n  const displayShading = useProgramAndUniforms(gl, shaders.displayShading)\n  const divergence = useProgramAndUniforms(gl, shaders.divergence)\n  const gradient = useProgramAndUniforms(gl, shaders.gradient)\n  const pressure = useProgramAndUniforms(gl, shaders.pressure)\n  const splat = useProgramAndUniforms(gl, shaders.splat)\n  const vorticity = useProgramAndUniforms(gl, shaders.vorticity)\n\n  const memoized = useMemo(() => {\n    return {\n      advection,\n      background,\n      clear,\n      color,\n      curl,\n      displayShading,\n      divergence,\n      gradient,\n      pressure,\n      splat,\n      vorticity,\n    }\n  }, [\n    advection,\n    background,\n    clear,\n    color,\n    curl,\n    displayShading,\n    divergence,\n    gradient,\n    pressure,\n    splat,\n    vorticity,\n  ])\n\n  return memoized\n}\n","import { useMemo } from 'react'\nimport { useFBO, useDoubleFBO } from '@react-vertex/core'\n\nfunction useFramebuffers(gl, dyeSize, simSize, formats) {\n  const { R, RG, RGBA, halfFloat, hasLinear } = formats\n\n  const getOptsRFormat = () => ({\n    type: halfFloat,\n    minMag: gl.NEAREST,\n    format: R.format,\n    internalFormat: R.internalFormat,\n  })\n\n  const getOptsRGFormat = () => ({\n    type: halfFloat,\n    minMag: hasLinear ? gl.LINEAR : gl.NEAREST,\n    format: RG.format,\n    internalFormat: RG.internalFormat,\n  })\n\n  const getOptsRGBAFormat = () => ({\n    type: halfFloat,\n    minMag: hasLinear ? gl.LINEAR : gl.NEAREST,\n    format: RGBA.format,\n    internalFormat: RGBA.internalFormat,\n  })\n\n  const curlFBO = useFBO(gl, ...simSize, getOptsRFormat)\n  const divergenceFBO = useFBO(gl, ...simSize, getOptsRFormat)\n  const densityDFBO = useDoubleFBO(gl, ...dyeSize, getOptsRGBAFormat)\n  const pressureDFBO = useDoubleFBO(gl, ...simSize, getOptsRFormat)\n  const velocityDFBO = useDoubleFBO(gl, ...simSize, getOptsRGFormat)\n\n  const memoized = useMemo(() => {\n    return {\n      curlFBO,\n      divergenceFBO,\n      densityDFBO,\n      pressureDFBO,\n      velocityDFBO,\n    }\n  }, [curlFBO, divergenceFBO, densityDFBO, pressureDFBO, velocityDFBO])\n\n  return memoized\n}\n\nexport default useFramebuffers\n","import { useEffect, useMemo } from 'react'\nimport { timer } from 'd3-timer'\nimport { useCanvas } from '@react-vertex/core'\nimport { generateColor } from '../utils'\n\nexport function Pointer() {\n    this.id = -1\n    this.x = 0\n    this.y = 0\n    this.dx = 0\n    this.dy = 0\n    this.down = false\n    this.moved = false\n    this.color = [30, 0, 300]\n}\n\nexport default function usePointers() {\n    const canvas = useCanvas()\n\n    const pointers = useMemo(() => {\n        return [new Pointer()]\n    }, [])\n\n    useEffect(() => {\n        let lastColorChange = 0\n\n        const timerLoop = timer(() => {\n        if (lastColorChange + 100 < Date.now()) {\n            lastColorChange = Date.now()\n\n            for (let i = 0; i < pointers.length; i++) {\n            const p = pointers[i]\n            p.color = generateColor()\n            }\n        }\n        })\n\n        return () => timerLoop.stop()\n    })\n\n    useEffect(() => {\n        function onMouseMove(e) {\n        if(Math.random() > 0.8) {\n            /* mimicking onMouseDown */\n            pointers[0].down = true\n            pointers[0].color = generateColor()\n        }\n        \n        let x = e.pageX\n        let y = e.pageY\n\n        x -= canvas.offsetLeft\n        y -= canvas.offsetTop\n\n        pointers[0].moved = pointers[0].down\n        pointers[0].dx = (x - pointers[0].x) * 5.0\n        pointers[0].dy = (y - pointers[0].y) * 5.0\n        pointers[0].x = x\n        pointers[0].y = y\n        }\n\n        function onTouchMove(e) {\n        e.preventDefault()\n\n        const touches = e.targetTouches\n\n        for (let i = 0; i < touches.length; i++) {\n            const pointer = pointers[i]\n            pointer.moved = pointer.down\n\n            let x = touches[i].pageX\n            let y = touches[i].pageY\n\n            x -= canvas.offsetLeft\n            y -= canvas.offsetTop\n\n            pointer.dx = (x - pointer.x) * 8.0\n            pointer.dy = (y - pointer.y) * 8.0\n            pointer.x = x\n            pointer.y = y\n        }\n        }\n\n        function onMouseDown() {\n        pointers[0].down = true\n        pointers[0].color = generateColor()\n        }\n\n        function onTouchStart(e) {\n        e.preventDefault()\n\n        const touches = e.targetTouches\n\n        for (let i = 0; i < touches.length; i++) {\n            if (i >= pointers.length) {\n            pointers.push(new Pointer())\n            }\n\n            let x = touches[i].pageX\n            let y = touches[i].pageY\n\n            x -= canvas.offsetLeft\n            y -= canvas.offsetTop\n\n            pointers[i].id = touches[i].identifier\n            pointers[i].down = true\n            pointers[i].x = x\n            pointers[i].y = y\n            pointers[i].color = generateColor()\n        }\n        }\n\n        function onMouseUp() {\n        pointers[0].down = false\n        }\n\n        function onTouchEnd(e) {\n        const touches = e.changedTouches\n\n        for (let i = 0; i < touches.length; i++) {\n            for (let j = 0; j < pointers.length; j++) {\n            if (touches[i].identifier == pointers[j].id) {\n                pointers[j].down = false\n            }\n            }\n        }\n        }\n\n        canvas.addEventListener('mousemove', onMouseMove)\n        canvas.addEventListener('touchmove', onTouchMove, false)\n        canvas.addEventListener('mousedown', onMouseDown)\n        canvas.addEventListener('touchstart', onTouchStart)\n        window.addEventListener('mouseup', onMouseUp)\n        window.addEventListener('touchend', onTouchEnd)\n\n        return () => {\n        canvas.removeEventListener('mousemove', onMouseMove)\n        canvas.removeEventListener('touchmove', onTouchMove, false)\n        canvas.removeEventListener('mousedown', onMouseDown)\n        canvas.removeEventListener('touchstart', onTouchStart)\n        window.removeEventListener('mouseup', onMouseUp)\n        window.removeEventListener('touchend', onTouchEnd)\n        }\n    }, [pointers, canvas])\n\n    return pointers\n}\n","import { useMemo } from 'react'\nimport { useWebGLVersion } from '@react-vertex/core'\n\nfunction supportRenderTextureFormat(gl, internalFormat, format, type) {\n  const texture = gl.createTexture()\n  gl.bindTexture(gl.TEXTURE_2D, texture)\n\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST)\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST)\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE)\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE)\n  gl.texImage2D(gl.TEXTURE_2D, 0, internalFormat, 4, 4, 0, format, type, null)\n\n  const fbo = gl.createFramebuffer()\n  const attach = gl.COLOR_ATTACHMENT0\n\n  gl.bindFramebuffer(gl.FRAMEBUFFER, fbo)\n  gl.framebufferTexture2D(gl.FRAMEBUFFER, attach, gl.TEXTURE_2D, texture, 0)\n\n  const status = gl.checkFramebufferStatus(gl.FRAMEBUFFER)\n\n  if (status != gl.FRAMEBUFFER_COMPLETE) {\n    return false\n  }\n\n  return true\n}\n\nfunction getSupportedFormat(gl, internalFormat, format, type) {\n  if (!supportRenderTextureFormat(gl, internalFormat, format, type)) {\n    switch (internalFormat) {\n      case gl.R16F:\n        return getSupportedFormat(gl, gl.RG16F, gl.RG, type)\n      case gl.RG16F:\n        return getSupportedFormat(gl, gl.RGBA16F, gl.RGBA, type)\n      default:\n        return null\n    }\n  }\n\n  return { internalFormat, format }\n}\n\nexport default function useFormats(gl) {\n  const version = useWebGLVersion()\n\n  const memoized = useMemo(() => {\n    let texHalfFLoat\n    let hasLinear\n\n    const webgl2 = version === 2\n\n    if (webgl2) {\n      gl.getExtension('EXT_color_buffer_float')\n      hasLinear = !!gl.getExtension('OES_texture_float_linear')\n    } else {\n      texHalfFLoat = gl.getExtension('OES_texture_half_float')\n      hasLinear = !!gl.getExtension('OES_texture_half_float_linear')\n    }\n\n    const halfFloat = webgl2 ? gl.HALF_FLOAT : texHalfFLoat.HALF_FLOAT_OES\n\n    let RGBA, RG, R\n\n    if (webgl2) {\n      RGBA = getSupportedFormat(gl, gl.RGBA16F, gl.RGBA, halfFloat)\n      RG = getSupportedFormat(gl, gl.RG16F, gl.RG, halfFloat)\n      R = getSupportedFormat(gl, gl.R16F, gl.RED, halfFloat)\n    } else {\n      RGBA = getSupportedFormat(gl, gl.RGBA, gl.RGBA, halfFloat)\n      RG = getSupportedFormat(gl, gl.RGBA, gl.RGBA, halfFloat)\n      R = getSupportedFormat(gl, gl.RGBA, gl.RGBA, halfFloat)\n    }\n\n    return {\n      RGBA,\n      RG,\n      R,\n      halfFloat,\n      hasLinear,\n    }\n  }, [gl, version])\n\n  return memoized\n}\n","import { useMemo } from 'react'\n\nexport default function useResolution(size, width, height) {\n  const memoized = useMemo(() => {\n    let aspectRatio = 1\n\n    if (width && height) {\n      aspectRatio = width / height\n    }\n\n    if (aspectRatio < 1) {\n      aspectRatio = 1.0 / aspectRatio\n    }\n\n    const max = Math.round(size * aspectRatio)\n    const min = Math.round(size)\n\n    if (width > height) {\n      return [max, min]\n    } else {\n      return [min, max]\n    }\n  }, [size, width, height])\n\n  return memoized\n}\n","import { useEffect } from 'react'\nimport { timer } from 'd3-timer'\nimport { convertHex } from '@react-vertex/color-hooks'\nimport { useWebGLContext, useCanvasSize } from '@react-vertex/core'\nimport * as config from './config'\nimport { generateColor } from './utils'\nimport {\n    usePointers,\n    usePrograms,\n    useFramebuffers,\n    useFormats,\n    useResolution,\n} from './customHooks'\n\nconst backColor = convertHex(config.BACK_COLOR)\n\nfunction Simulation() {\n    const { width, clientWidth, height, clientHeight } = useCanvasSize()\n\n    const gl = useWebGLContext()\n    const formats = useFormats(gl)\n\n    const pointers = usePointers()\n    const programs = usePrograms(gl, formats.hasLinear)\n\n    const simSize = useResolution(config.SIM_RESOLUTION, width, height)\n    const dyeSize = useResolution(config.DYE_RESOLUTION, width, height)\n\n    const framebuffers = useFramebuffers(gl, dyeSize, simSize, formats)\n\n    useEffect(() => {\n        const {\n            advection,\n            background,\n            clear,\n            color,\n            curl,\n            displayShading,\n            divergence,\n            gradient,\n            pressure,\n            splat,\n            vorticity,\n        } = programs\n\n        const {\n            curlFBO,\n            divergenceFBO,\n            densityDFBO,\n            pressureDFBO,\n            velocityDFBO,\n        } = framebuffers\n\n        const splatStack = []\n\n        const renderToBuffer = (() => {\n            const verts = new Float32Array([-1, -1, -1, 1, 1, 1, 1, -1])\n            const index = new Uint16Array([0, 1, 2, 0, 2, 3])\n\n            gl.bindBuffer(gl.ARRAY_BUFFER, gl.createBuffer())\n            gl.bufferData(gl.ARRAY_BUFFER, verts, gl.STATIC_DRAW)\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, gl.createBuffer())\n            gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, index, gl.STATIC_DRAW)\n            gl.vertexAttribPointer(0, 2, gl.FLOAT, false, 0, 0)\n            gl.enableVertexAttribArray(0)\n\n            return buffer => {\n                gl.bindFramebuffer(gl.FRAMEBUFFER, buffer)\n                gl.drawElements(gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0)\n            }\n        })()\n\n        function input() {\n            if (splatStack.length > 0) {\n                multipleSplats(splatStack.pop())\n            }\n\n            for (let i = 0; i < pointers.length; i++) {\n                const p = pointers[i]\n                if (p.moved) {\n                updateSplat(p.x, p.y, p.dx, p.dy, p.color)\n                p.moved = false\n                }\n            }\n        }\n\n        function step(dt) {\n            gl.disable(gl.BLEND)\n            gl.viewport(0, 0, simSize[0], simSize[1])\n\n            gl.useProgram(curl.program)\n            gl.uniform2f(curl.uniforms.texelSize, 1.0 / simSize[0], 1.0 / simSize[1])\n            gl.uniform1i(curl.uniforms.uVelocity, velocityDFBO.read.attach(0))\n            renderToBuffer(curlFBO.fbo)\n\n            gl.useProgram(vorticity.program)\n            gl.uniform2f(\n                vorticity.uniforms.texelSize,\n                1.0 / simSize[0],\n                1.0 / simSize[1],\n            )\n            gl.uniform1i(vorticity.uniforms.uVelocity, velocityDFBO.read.attach(0))\n            gl.uniform1i(vorticity.uniforms.uCurl, curlFBO.attach(1))\n            gl.uniform1f(vorticity.uniforms.curl, config.CURL)\n            gl.uniform1f(vorticity.uniforms.dt, dt)\n            renderToBuffer(velocityDFBO.write.fbo)\n            velocityDFBO.swap()\n\n            gl.useProgram(divergence.program)\n            gl.uniform2f(\n                divergence.uniforms.texelSize,\n                1.0 / simSize[0],\n                1.0 / simSize[1],\n            )\n            gl.uniform1i(divergence.uniforms.uVelocity, velocityDFBO.read.attach(0))\n            renderToBuffer(divergenceFBO.fbo)\n\n            gl.useProgram(clear.program)\n            gl.uniform1i(clear.uniforms.uTexture, pressureDFBO.read.attach(0))\n            gl.uniform1f(clear.uniforms.value, config.PRESSURE_DISSIPATION)\n            renderToBuffer(pressureDFBO.write.fbo)\n            pressureDFBO.swap()\n\n            gl.useProgram(pressure.program)\n            gl.uniform2f(\n                pressure.uniforms.texelSize,\n                1.0 / simSize[0],\n                1.0 / simSize[1],\n            )\n            gl.uniform1i(pressure.uniforms.uDivergence, divergenceFBO.attach(0))\n\n            for (let i = 0; i < config.PRESSURE_ITERATIONS; i++) {\n                gl.uniform1i(pressure.uniforms.uPressure, pressureDFBO.read.attach(1))\n                renderToBuffer(pressureDFBO.write.fbo)\n                pressureDFBO.swap()\n            }\n\n            gl.useProgram(gradient.program)\n            gl.uniform2f(\n                gradient.uniforms.texelSize,\n                1.0 / simSize[0],\n                1.0 / simSize[1],\n            )\n            gl.uniform1i(gradient.uniforms.uPressure, pressureDFBO.read.attach(0))\n            gl.uniform1i(gradient.uniforms.uVelocity, velocityDFBO.read.attach(1))\n            renderToBuffer(velocityDFBO.write.fbo)\n            velocityDFBO.swap()\n\n            gl.useProgram(advection.program)\n            gl.uniform2f(\n                advection.uniforms.texelSize,\n                1.0 / simSize[0],\n                1.0 / simSize[1],\n            )\n\n            if (!formats.shasLinear) {\n                gl.uniform2f(\n                advection.uniforms.dyeTexelSize,\n                1.0 / simSize[0],\n                1.0 / simSize[1],\n                )\n            }\n\n            const velocityId = velocityDFBO.read.attach(0)\n            gl.uniform1i(advection.uniforms.uVelocity, velocityId)\n            gl.uniform1i(advection.uniforms.uSource, velocityId)\n            gl.uniform1f(advection.uniforms.dt, dt)\n            gl.uniform1f(advection.uniforms.dissipation, config.VELOCITY_DISSIPATION)\n            renderToBuffer(velocityDFBO.write.fbo)\n            velocityDFBO.swap()\n\n            gl.viewport(0, 0, dyeSize[0], dyeSize[1])\n\n            if (!formats.hasLinear) {\n                gl.uniform2f(\n                advection.uniforms.dyeTexelSize,\n                1.0 / dyeSize[0],\n                1.0 / dyeSize[1],\n                )\n            }\n\n            gl.uniform1i(advection.uniforms.uVelocity, velocityDFBO.read.attach(0))\n            gl.uniform1i(advection.uniforms.uSource, densityDFBO.read.attach(1))\n            gl.uniform1f(advection.uniforms.dissipation, config.DENSITY_DISSIPATION)\n            renderToBuffer(densityDFBO.write.fbo)\n            densityDFBO.swap()\n        }\n\n        function render(target) {\n            if (target == null || !config.TRANSPARENT) {\n                gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA)\n                gl.enable(gl.BLEND)\n            } else {\n                gl.disable(gl.BLEND)\n            }\n\n            const tWidth = target == null ? width : dyeSize[0]\n            const tHeight = target == null ? height : dyeSize[1]\n\n            gl.viewport(0, 0, width, height)\n\n            if (!config.TRANSPARENT) {\n                gl.useProgram(color.program)\n                gl.uniform4f(color.uniforms.color, ...backColor)\n                renderToBuffer(target)\n            }\n\n            if (target == null && config.TRANSPARENT) {\n                gl.useProgram(background.program)\n                gl.uniform1f(background.uniforms.aspectRatio, tWidth / tHeight)\n                renderToBuffer(null)\n            }\n\n            gl.useProgram(displayShading.program)\n            gl.uniform2f(\n                displayShading.uniforms.texelSize,\n                1.0 / tWidth,\n                1.0 / tHeight,\n            )\n            gl.uniform1i(displayShading.uniforms.uTexture, densityDFBO.read.attach(0))\n\n            renderToBuffer(target)\n        }\n\n        function updateSplat(x, y, dx, dy, splatRGB) {\n            gl.viewport(0, 0, simSize[0], simSize[1])\n\n            const centerX = x / clientWidth\n            const centerY = 1.0 - y / clientHeight\n\n            gl.useProgram(splat.program)\n            gl.uniform1i(splat.uniforms.uTarget, velocityDFBO.read.attach(0))\n            gl.uniform1f(splat.uniforms.aspectRatio, width / height)\n            gl.uniform2f(splat.uniforms.point, centerX, centerY)\n            gl.uniform3f(splat.uniforms.color, dx, -dy, 1.0)\n            gl.uniform1f(splat.uniforms.radius, config.SPLAT_RADIUS / 100.0)\n            renderToBuffer(velocityDFBO.write.fbo)\n            velocityDFBO.swap()\n\n            gl.viewport(0, 0, dyeSize[0], dyeSize[1])\n            gl.uniform1i(splat.uniforms.uTarget, densityDFBO.read.attach(0))\n            gl.uniform3f(splat.uniforms.color, splatRGB.r, splatRGB.g, splatRGB.b)\n            renderToBuffer(densityDFBO.write.fbo)\n            densityDFBO.swap()\n        }\n\n        function multipleSplats(amount) {\n        for (let i = 0; i < amount; i++) {\n            const splatRGB = generateColor()\n            splatRGB.r *= 10.0\n            splatRGB.g *= 10.0\n            splatRGB.b *= 10.0\n            const x = width * Math.random()\n            const y = height * Math.random()\n            const dx = 1000 * (Math.random() - 0.5)\n            const dy = 1000 * (Math.random() - 0.5)\n            updateSplat(x, y, dx, dy, splatRGB)\n        }\n        }\n\n        const timerLoop = timer(() => {\n        input()\n        step(0.016)\n        render(null)\n        })\n\n        // multipleSplats(parseInt(Math.random() * 20) + 20)\n\n        return () => timerLoop.stop()\n    }, [\n        gl,\n        formats,\n        pointers,\n        simSize,\n        dyeSize,\n        width,\n        clientWidth,\n        height,\n        clientHeight,\n        programs,\n        framebuffers,\n    ])\n\n    return null\n}\n\nexport default Simulation\n","import React, { Component, useRef } from 'react'\nimport { Canvas } from '@react-vertex/core'\nimport { useMeasure } from '@react-vertex/dom-hooks'\nimport Simulation from './Simulation'\n\nconst attrs = {\n    alpha: true,\n    depth: false,\n    stencil: false,\n    antialias: false,\n    preserveDrawingBuffer: false,\n}\n\nconst style = {\n    borderRadius: 0,\n    cursor: 'default',\n    userSelect: 'none',\n    WebkitTapHighlightColor: 'transparent',\n}\n\nfunction FluidSimulation() {\n    const container = useRef()\n    const { width } = useMeasure(container)\n    const height = 300\n\n    return (\n      <div className='fluid-simulation'>\n        <div ref={container}>\n          {width ? (\n            <Canvas\n              webgl2\n              width={width}\n              height={height}\n              canvasStyle={style}\n              contextAttrs={attrs}\n            >\n              <Simulation />\n            </Canvas>\n          ) : null}\n        </div>\n      </div>\n    )\n  }\n\n\nexport default FluidSimulation\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport actions from 'store/actions'\n\nimport { Motion, spring } from 'react-motion'\n\nimport FluidSimulation from 'components/fluidSimulation'\n\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {open: false};\n    };\n\n    handleMouseDown = () => {\n        this.setState({open: !this.state.open});\n    };\n\n    handleTouchStart = (e) => {\n        e.preventDefault();\n        this.handleMouseDown();\n    };\n\n    render() {\n        const { layer1 } = this.props.layers\n        const style1 = {\n            x: spring(this.state.open ? -200 : 200, {stiffness: 120, damping: 50}),\n            y: spring(this.state.open ? -50 : 50, {stiffness: 120, damping: 50})\n        }\n\n        return (\n            <div className='home'>\n                <FluidSimulation />\n                <p>Test Message</p>\n                <button onClick={e => this.props.setLayer1(!layer1)}>\n                    toggle layer 1\n                </button>\n\n                {layer1 &&\n                    <p>layer 1 activated</p>\n                }\n                <button\n                onMouseDown={this.handleMouseDown}\n                onTouchStart={this.handleTouchStart}\n                >\n                Toggle\n                </button>\n\n                <Motion \n                style={style1}>\n                    {({x, y}) =>\n                    // children is a callback which should accept the current value of\n                    // `style`\n                    <div className=\"demo0\">\n                        <div\n                        className=\"demo0-block\" \n                        style={{\n                            WebkitTransform: `translate3d(${x}px, ${y}px, 0)`,\n                            transform: `translate3d(${x}px, ${y}px, 0)`,\n                        }}\n                        >\n                            test text\n                        </div>\n                    </div>\n                    }\n                </Motion>\n\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        layers: state.content.home,\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setLayer1: (data) => dispatch(actions.setLayer1(data)),\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Home);\n","import React, { Component } from 'react';\nimport { Route, withRouter } from 'react-router-dom';\n// import { connect } from 'react-redux';\n\nimport Home from 'components/home';\n\nclass Content extends Component {\n    render() {\n        return (\n            <section className='content'>\n                <div style={{width: '100%'}}>\n                    <Route exact path='/' render={() => <Home />} />\n                </div>\n            </section>\n        );\n    }\n}\n\n// const mapStateToProps = state => {\n//     return {};\n// };\n\n// const mapDispatchToProps = dispatch => {\n//     return {};\n// };\n\nexport default withRouter(Content);\n","import React from 'react';\nimport './App.scss';\n\nimport Content from './components/content'\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Content />\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { store } from 'store';\nimport './index.scss';\n// import * as serviceWorker from './serviceWorker';\n\nimport App from './App';\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router>\n            <App />\n        </Router>\n    </Provider>\n    ,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}